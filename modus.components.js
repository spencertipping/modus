caterwaul.module( 'modus.components' , function ($) { $ = jQuery; $.modus.formatted =function (patterns, serialize) { ; return(function () {var escape =function (p) { ; return p.replace( /([.$+*\[\]{}()?])/g , '\\$1')} , regexp_for =function (p) { ; return new RegExp( '^\\s*' + escape(p) .replace( /(_\w+)/g , '\\S+') + '\\s*$' , 'i')} , variable_list_for =function (p) { ; return p.match( /_\w+/g)} , compiled_regexps = (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( ( {pattern: regexp_for(x[0]) , variables: variable_list_for(x[0]) , f: x[1]})) ; return xr}) .call(this, (function (o) {var ps = [] ; for (var k in o) Object.prototype.hasOwnProperty.call(o, k) && ps.push( [k, o[k]]) ; return ps}) .call(this, ( patterns))) , make_variable_table =function (matches, names) { ; return(function (o) {for (var r = {} , i = 0, l = o.length, x; i < l; ++i) x = o[i] , r[x[0]] = x[1] ; return r}) .call(this, ( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( ( [x, matches[xi]])) ; return xr}) .call(this, names)))} , matching_patterns =function (s) { ; return(function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , (x.pattern.test(s)) && xr.push(x) ; return xr}) .call(this, compiled_regexps)} , variable_sets_for =function (s) { ; return(function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( ( {f: x.f, vars: make_variable_table(x.pattern.exec(s) , x.variables)})) ; return xr}) .call(this, matching_patterns(s))} , parse =function (s) { ; return(function (it) {return it[0]}) .call(this, ( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , (x !== undefined) && xr.push(x) ; return xr}) .call(this, (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( (x.f(x.vars))) ; return xr}) .call(this, variable_sets_for(s)))))} ; return this.modus( (function (nothing) {return parse(this.modus( 'val'))}) , (function (value) {return this.modus( 'val' , serialize(value))}))}) .call(this)} , $.modus.name =function () { ; return this} , $.modus.email =function () { ; return this} , $.modus.phone =function () { ; return this} , $.modus.address =function () { ; return this} , (function (it) {return it.named_months = 'january february march april may june july august september october november december' .split( /\s+/) , it.named_times = {midnight: '12:00 AM' , noon: '12:00 PM'} , it.time_formats = [ '_name' , '_hh:_mm _ap' , '_hh:_mm:_ss _ap' , '_hh:_mm_ap' , '_hh:_mm:_ss_ap' , '_HH:_mm' , '_HH:_mm:_ss' , '_hh_ap' , '_hh _ap'] , it.date_formats = [ '_month _dd, _yyyy' , '_month _dd _yyyy' , '_dd _month, _yyyy' , '_dd _month _yyyy' , '_yyyy _ddd _month' , '_yyyy _month _dd' , '_yyyy._mm_dd' , '_mm/_dd/_yyyy' , '_mm-_dd-_yyyy' , '_month _dd' , '_dd _month' , '_dd/_mm' , '_dd-_mm'] , it.date_with_time_formats = [ '_date at _time' , '_date _time' , '_time on _date' , '_time _date' , '_date._time' , '_date'] , it.named_month =function (m) { ; return(function (it) {return it.length === 1 ? it[0]: undefined}) .call(this, ( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length, y1; xi < xl; ++xi) x = xs[xi] , (y1 = (x.indexOf(m.toLowerCase()) === 0 && new Number(xi))) && xr.push(y1) ; return xr}) .call(this, it.named_months)))} , it.parse_year =function (y) { ; return /\d{4}/ .test(y) ? Number(y): /\d{2}/ .test(y) ? Number(y) + 1970: undefined} , it.milliseconds =function (h, m, s) { ; return ( ( (h * 60) + m) * 60 + s) * 1000} , it.date_from_match =function (match) { ; return(function () {var year = match._yyyy ? it.parse_year(match._yyyy): new Date() .getFullYear() , month = match._month ? it.named_month(match._month): Number(match._mm) - 1, day = match._dd && Number(match._dd) ; return year !== undefined && month !== undefined && day !== undefined ? new Date(year, month, day): undefined}) .call(this)} , it.time_from_match =function (match) { ; return match._name ? it.time_from_match(it.named_times[match._name]): match._mm_ap ? it.time_from_match( ( '' + (it._hh) + ':' + (it._mm_ap.substr(0, 2)) + ' ' + (it._mm_ap.substr(2)) + '')): match._ss_ap ? it.time_from_match( ( '' + (it._hh) + ':' + (it._mm) + ':' + (it._ss_ap.substr(0, 2)) + ' ' + (it._ss_ap.substr(2)) + '')): match._hh_ap ? it.time_from_match( ( '' + (it._hh_ap.substr(0, 2)) + ' ' + (it._hh_ap.substr(2)) + '')): match._HH ? it.milliseconds(Number(match._HH) , Number(match._mm) || 0, Number(match._ss) || 0): match._ap ? it.milliseconds(Number(match._hh) % 12 + ( /^p/i .test(match._ap) ? 12: 0) , Number(match._mm) || 0, Number(match._ss) || 0): undefined} , it.parse_date_time =function (match) { ; return(function () {var date = it.date_from_match(match) , time = it.time_from_match(match) ; return date !== undefined ? new Date( +date + +time): undefined}) .call(this)} , it.serialize_time =function (d) { ; return( '' + (it.getHours() % 12 || 12) + ':' + (it.getMinutes()) + ' ' + (it.getHours() >= 12 ? "PM": "AM") + '')} , it.serialize_date =function (d) { ; return( '' + (d.getDays()) + ' ' + (it.named_months[d.getMonth()]) + ' ' + (it.getFullYear()) + '') + (d.getHours() === 0 && d.getMinutes() === 0 ? '': ( ' ' + (it.serialize_time(d)) + ''))} , it.date_patterns =function () { ; return(function () {var pairings = it.date_formats - it.time_formats, all_dates_and_times =function (format) { ; return(function (xs1) {var x1, x01, xi1, xl1, xr1;for (var xr1 = new xs1.constructor() , xi1 = 0, xl1 = xs1.length; xi1 < xl1; ++xi1) x1 = xs1[xi1] , xr1.push.apply(xr1, Array.prototype.slice.call( ( ~ [pairings *p[x.replace( /_date/ , p[0]) .replace( /_time/ , p[1])]] (x1)))) ; return xr1}) .call(this, it.date_with_time_formats)} , unique_strings_in =function (xs) { ; return(function (o) {var ks = [] ; for (var k in o) Object.prototype.hasOwnProperty.call(o, k) && ks.push(k) ; return ks}) .call(this, ( (function (o) {for (var r = {} , i = 0, l = o.length, x; i < l; ++i) x = o[i] , r[x[0]] = x[1] ; return r}) .call(this, ( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( ( [x, true])) ; return xr}) .call(this, xs)))))} ; return unique_strings_in( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push.apply(xr, Array.prototype.slice.call( (all_dates_and_times(x)))) ; return xr}) .call(this,it.date_with_time_formats))}) .call(this)} , it.time_parsers =function () { ; return(function (o) {for (var r = {} , i = 0, l = o.length, x; i < l; ++i) x = o[i] , r[x[0]] = x[1] ; return r}) .call(this, ( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( ( [x, it.time_from_match])) ; return xr}) .call(this, it.time_formats)))} , it.date_parsers =function () { ; return(function (o) {for (var r = {} , i = 0, l = o.length, x; i < l; ++i) x = o[i] , r[x[0]] = x[1] ; return r}) .call(this, ( (function (xs) {var x, x0, xi, xl, xr;for (var xr = new xs.constructor() , xi = 0, xl = xs.length; xi < xl; ++xi) x = xs[xi] , xr.push( ( [x, it.parse_date_time])) ; return xr}) .call(this, it.date_patterns())))} , it}) .call(this, ( $.modus.util)) , $.modus.date =function () { ; return this.formatted($.modus.util.date_parsers() , $.modus.util.serialize_date)} , $.modus.time =function () { ; return this.formatted($.modus.util.time_parsers() , $.modus.util.serialize_time)} , $.modus.username =function () { ; return this} , $.modus.password =function () { ; return this.attr( 'type' , 'password')} , $.modus.hashed_password =function () { ; return this.attr( 'type' , 'password') .modus(delay in kevlar.encode85(kevlar.sha256(this.val())) , (function (p) {return(function () {throw 'cannot set password'}) .call(this)}))}}) ;